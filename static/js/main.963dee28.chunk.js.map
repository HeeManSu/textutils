{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","aria-checked","aria-labelledby","tabindex","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","word","prompt","includes","newtext","document","getElementById","select","navigator","clipboard","writeText","length","defaultProps","Alert","alert","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.963dee28.chunk.js","sourcesContent":["import React from 'react' // It is a react function based component and its shortcut  of importing it is rfc..\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                About\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === 'light' ? 'dark' : 'light'\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              aria-checked=\"false\"\r\n              aria-labelledby=\"foo\"\r\n               tabindex=\"0\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpOnClick = () => {\r\n    // console.log(\"Upper Case was clicked\" + text)\r\n    let newText = text.toUpperCase()\r\n    setText(newText)\r\n    props.showAlert(\"Converted to upperCase\", \"success\")\r\n  }\r\n\r\n  const handleLowOnClick = () => {\r\n    let newText = text.toLowerCase()\r\n    setText(newText)\r\n    props.showAlert(\"Converted to loweCase\", \"success\")\r\n  }\r\n\r\n  const handleOnClear = () => {\r\n    let newText = ''\r\n    setText(newText)\r\n    props.showAlert(\"Text Area cleard\", \"success\")\r\n  }\r\n\r\n  const reverseText = () => {\r\n    //Split function splits the text into an array of words.\r\n    // Reverse function reverse the array of words.\r\n    //join function combines the reverese array again into a sentence.\r\n    let newText = text.split('').reverse().join('')\r\n    setText(newText)\r\n    props.showAlert(\"Text has been reversed\", \"success\")\r\n  }\r\n\r\n  const findWord = () => {\r\n    let word = prompt('Enter the word you want to search')\r\n    let newText = text.includes(word)\r\n    if (newText === true) {\r\n      setText('True')\r\n    } else {\r\n      setText('False')\r\n    }\r\n  }\r\n\r\n  const copyText = () => {\r\n    let newtext = document.getElementById('myBox')\r\n    newtext.select()\r\n    navigator.clipboard.writeText(newtext.value)\r\n    props.showAlert(\"Text has been copied to the clipboard\", \"success\")\r\n  }\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/)\r\n    setText(newText.join(' '))\r\n    props.showAlert(\"Extra spaces has been successfully removes\", \"success\")\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\")\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const [text, setText] = useState('')\r\n  // text = \"new text\" wrong way to change the state\r\n  // setText(\"new text\") correct way to change the state\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === 'dark' ? 'white' : 'black' }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : 'black',\r\n            }}\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpOnClick}>\r\n          Convert To UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowOnClick}>\r\n          Convert To LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleOnClear}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={reverseText}>\r\n          Reverse\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={findWord}>\r\n          Find Word\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={copyText}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === 'dark' ? 'white' : 'dark' }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          <b>\r\n            {' '}\r\n            {text.split(' ').length} words and {text.length} characters\r\n          </b>\r\n        </p>\r\n        <p>\r\n          <b> {0.008 * text.split(' ').length} Minutes read </b>\r\n        </p>\r\n\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text: \"Enter something in the textbox to preview it here\"}</p>\r\n        \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase()\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n  }\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className=\"alert alert-warning alert-dismissible fade show\"\r\n        role=\"alert\"\r\n      >\r\n        <strong>\r\n          {' '}\r\n          <center>\r\n            {capitalize(props.alert.type)} : {props.alert.msg}{' '}\r\n          </center>\r\n        </strong>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import { useState } from 'react'\nimport './App.css'\n// import About from './components/About'\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport Alert from './components/Alert'\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport React from 'react'\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500)\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert('Dark mode has been enabled', 'success')\n      document.title = 'TextUtils - Dark Mode'\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Light mode has been enabled', 'success')\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}> </Alert>\n      <div className=\"container my-3\">\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Enter the text to analyze below\"\n       mode={mode}\n        ></TextForm>\n    \n        {/* <Routes>\n            <Route\n             exact path=\"/\"\n              element={\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                ></TextForm>\n              }\n            />\n            <Route exact path=\"about\" element={<About />} />\n          </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}